#!/usr/bin/env bash
#
# Change API in running VM

scriptloc=$(dirname "$0")
develroot=$(dirname "${scriptloc}")
rundir="${XDG_RUNTIME_DIR}/osbuild-vm"

ssh -q localvm sudo systemctl stop '*osbuild*'

set -eu

# Gen certs
mkdir -p "${rundir}/config" "${rundir}/distributions"
"${develroot}"/vm/gen-certs.sh "${develroot}/vm/openssl.cnf" "${rundir}/config" "${rundir}/config/ca"

# Copy configs into VM
ssh -q root@localvm mkdir -p /etc/osbuild-composer /etc/osbuild-worker
rsync -aP --delete "${rundir}"/config/. root@localvm:/etc/osbuild-composer/.
rsync -aP "${develroot}/config/osbuild-composer/." root@localvm:/etc/osbuild-composer/.
rsync -aP "${develroot}/config/osbuild-worker/." root@localvm:/etc/osbuild-worker/.
rsync -aP "${develroot}/docker-image-builder/ib-distributions/." "${rundir}/distributions"  # for IB docker container

ssh -q root@localvm chown root:root -R /etc/osbuild-composer/
ssh -q root@localvm chmod ugo+rX -R /etc/osbuild-composer/

ssh -q localvm sudo systemctl start osbuild-composer-api.socket osbuild-remote-worker.socket

curl -s -k --cert "${rundir}/config/client-crt.pem" --cacert "${rundir}/config/ca-crt.pem" --key "${rundir}/config/client-key.pem" https://localhost:10443/api/image-builder-composer/v2/openapi | jq '.paths | keys'

#!/usr/bin/bash

set -eu

usage() {
    echo "$0 [composer|osbuild]"
    echo
    echo "Update osbuild and osbuild-composer in the runninv VM."
    echo
    echo "Specify either 'composer' or 'osbuild' to select which package to update."
    echo "Without arguments, updates both."
    exit 1
}

composer=0
osbuild=0
if (( $# == 0 )); then
    composer=1
    osbuild=1
elif (( $# == 1 )) && [[ $1 == "composer" ]]; then
    composer=1
elif (( $# == 1 )) && [[ $1 == "osbuild" ]]; then
    osbuild=1
else
    usage
fi

sshcmd() {
    ssh -q localvm "$@"
}

osbuildsrc=../osbuild
composersrc=../osbuild-composer
osbuilddir=projects/osbuild/osbuild
composerdir=projects/osbuild/osbuild-composer

echo "Stopping services"
sshcmd sudo systemctl stop "osbuild*" || true

if [[ $composer == 1 ]]; then
    sshcmd mkdir -p "${composerdir}"
    echo "Copying osbuild-composer sources to VM"
    rsync -aP --exclude build --exclude bin --exclude rpmbuild --delete-excluded --delete "${composersrc}/." localvm:"${composerdir}/."
    echo "Building osbuild-composer binaries"
    sshcmd "cd ${composerdir} && mkdir -p bin && go build -o bin/ ./cmd/osbuild-{composer,worker}"
    echo "Installing osbuild-composer"
    sshcmd "sudo make -C ${composerdir} install"
fi

if [[ $osbuild == 1 ]]; then
    sshcmd mkdir -p "${osbuilddir}"
    echo "Copying osbuild sources to VM"
    rsync -aP --exclude build --exclude rpmbuild --delete-excluded --delete "${osbuildsrc}/." localvm:"${osbuilddir}/."

    echo "Building osbuild RPMs"
    sshcmd git -C "${osbuilddir}" commit . -m wip --allow-empty
    sshcmd sudo dnf -y builddep "${osbuilddir}/osbuild.spec"
    sshcmd make -C "${osbuilddir}" rpm

    echo "Installing osbuild"
    sshcmd sudo dnf install -y "${osbuilddir}"/rpmbuild/RPMS/noarch/*.rpm
fi

sshcmd sudo rm -vf /etc/osbuild-composer/repositories/*
sshcmd sudo mkdir -vp /etc/osbuild-composer/repositories

echo "Restarting services"
sshcmd sudo systemctl restart osbuild-composer.socket

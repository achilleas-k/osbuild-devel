#!/usr/bin/env bash

set -euo pipefail
cd "$(dirname "$0")/.."

if (( $# != 1 )); then
    echo "USAGE: $0 <image-type>"
    exit 1
fi

imagetype="$1"
rundir="${XDG_RUNTIME_DIR}/osbuild-vm"
certdir="${rundir}/config"

source <(ssh -q localvm cat /etc/os-release)
DISTRO="${DISTRO_CODE:-${ID}-${VERSION_ID//./}}"
arch=$(ssh -q localvm uname -m)
for line in $(cat ./config/secrets.env); do
    eval "export ${line}"
done


echo "Reading repos"
repos=$(jq ".\"$arch\"" ../osbuild-composer/test/data/repositories/"$DISTRO".json)
request_file=$(mktemp -d)/osbuild-request.json

echo "Creating request data in ${request_file}"
cat > "${request_file}" << EOF
{
  "distribution": "${DISTRO}",
  "customizations": {
    "users": [
      {
        "name": "achilleas",
        "key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPqEtsCdSozq0DT8sOazpizsBP65Ni6SMqrQA85Wnfs1 achilleas@Jack"
      }
    ],
    "packages": [
      "tmux",
      "vim",
      "zsh"
    ]
  },
  "image_request": {
    "ostree": {
      "ref": "test/rhel/8/edge"
    },
    "architecture": "${arch}",
    "image_type": "${imagetype}",
    "repositories": ${repos},
    "upload_options": {
      "region": "${OSBUILD_AWS_REGION}"
    }
  }
}
EOF

cat "${request_file}"

curl -k --cert ${certdir}/client-crt.pem --cacert ${certdir}/ca-crt.pem --key ${certdir}/client-key.pem --request POST --header 'Content-Type: application/json' --data @"${request_file}" https://localhost:10443/api/image-builder-composer/v2/compose | jq

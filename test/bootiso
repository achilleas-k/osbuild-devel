#!/usr/bin/env bash
#
# Sets up and boots an installer ISO with an empty drive to install to

set -euo pipefail

if (( $# != 1 )); then
    echo "Provide path to a bootable image"
    exit 1
fi

img="$(realpath "$1")"
cd "$(dirname "$0")" || exit

startvmaarch64() {
    mac="FE:0B:6E:22:3D:13"
    qemu-system-aarch64 \
        -machine virt \
        -boot efi \
        -cpu cortex-a57 \
        -m 8G \
        -drive file="${1}" \
        -cdrom "${2}" \
        -device virtio-net-pci,netdev=n0,mac="${mac}" \
        -netdev user,id=n0,net=10.0.2.0/24 \
        -bios /usr/share/edk2-armvirt/aarch64/QEMU_EFI.fd
}

startvm() {
    mac="FE:0B:6E:22:3D:13"
    qemu-system-x86_64 \
        -enable-kvm \
        -cpu host \
        -m 4G \
        -drive file="${1}" \
        -cdrom "${2}" \
        -device virtio-net-pci,netdev=n0,mac="${mac}" \
        -netdev user,id=n0,net=10.0.2.0/24 \
        -bios /usr/share/edk2-ovmf/x64/OVMF.fd
}

imgdir=/media/slow.scratch/osbuild/tests
mkdir -p "${imgdir}"
drive="$(mktemp -p "${imgdir}" -t install-test-XXX.qcow2)"
qemu-img create -f qcow2 "${drive}" 12G

cleanup() {
    echo "Keeping VM install disk ${drive}"
}

startvm "${drive}" "${img}"
